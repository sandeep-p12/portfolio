---
import DefaultLayout from '../components/LayoutDefault.astro';
import PortfolioItem from '../components/PortfolioItem.astro';
import { writeToLocalDataFile, readLocalDataFile } from '../js/localDataManager';

// Fetch stars count from GitHub
async function getRepoStars(repo: string) {
  try {
    const res = await fetch("https://api.github.com/repos/" + repo);
    const data = await res.json();

    const stars = data.stargazers_count;
    const existingCache = await readLocalDataFile("openSourceProjectStars");

    if (stars) {
      // Cache stars count
      await writeToLocalDataFile("openSourceProjectStars", { ...existingCache, [repo]: stars });

      return stars;
    } else {
      // If we get rate limited or GitHub request fails, return the value from cache
      const cacheFile = await readLocalDataFile(`openSourceProjectStars`);
      const valueFromCache = cacheFile[repo];

      return valueFromCache || undefined;
    }
  } catch(error) {
    console.log(error);
  }
}

const starsCount = {
  binanceBot: await getRepoStars("lukeliasi/binance-dca-bot"),
  lukeliasi: await getRepoStars("lukeliasi/lukeliasi.com"),
}
---

<DefaultLayout documentTitle="Projects" documentDescription="Welcome to my portfolio, showcasing a selection of projects I've worked on.">
  <div class="container">
    <h1 class="main-heading text-swipe-animation">Projects</h1>
    <div class="intro">
      <p>Welcome to my portfolio, showcasing a selection of side projects I've worked on.</p>
    </div>
    <!-- projectLink="project/embracing-simplicity-and-privacy-with-umami-analytics" -->
    <!-- projectLink="https://willenhouse.com" -->
    <section class="projects">
      <PortfolioItem
        projectYear="2021"
        githubStarsCount={starsCount.binanceBot}
        title="Face Liveness Detection"
        image="/images/face_liveness.png"
        labels={[
          "Computer Vision",
          "ResNet",
          "Python",
        ]}
        labels={[
          "Python",
          "Computer Vision",
          "ResNet",
          "Image augmentation",
          "AWS",
          "SQL",
          "OpenCV",
          "Flask",
        ]}>
        <p slot="subtitle">Utilizing Advanced AI and Image Texture Analysis for Robust User Identity Verification.</p>

        <div slot="description">
          <p>Drawing on my proficiency in artificial intelligence and Computer Vision, I engineered an advanced face liveness detection model, enhancing digital security by accurately verifying user identities. At the core of this model is a Residual Network (ResNet) variant, specifically designed to analyze image textures, thereby differentiating real faces from spoofs with high precision. Crucially, I incorporated image augmentation techniques, including cropping, rotation, and flipping, to expand the training dataset, fostering model robustness and mitigating overfitting. This methodological approach increased the model's ability to generalize, leading to superior performance under real-world conditions.</p>
        </div>
      </PortfolioItem>

      <PortfolioItem
        projectYear="2020"
        title="Signature Detection"
        image="/images/signature.jpg"
        labels={[
          "Encode-Decoder",
          "One Class Classification",
          "Image Processing"
        ]}>
        <p slot="subtitle">Implementing One-Class Classification with Encoder-Decoder Approach for Efficient Signature Detection</p>

        <div slot="description">
          <p>Utilizing the concept of one-class classification, I developed a unique model for signature classification with an encoder-decoder approach. This model is specifically trained on a single class, comprising of genuine signatures. The encoder section of the model learns the inherent structure or patterns from this class, essentially capturing the 'signature' of the data. The decoder section then attempts to reconstruct the original data from these learned patterns. The efficiency of this reconstruction process forms the basis of our classification - a low reconstruction error suggests the presence of a signature in a document, and a high error indicates its absence. Through this novel approach, I have created an effective and reliable tool for automatic signature detection in documents, significantly enhancing the process of document verification.</p>
        </div>
      </PortfolioItem>

      <PortfolioItem
        projectYear="2020"
        title="Quickbooks Automation Bot"
        image="/images/quickbook.webp"
        labels={[
          "Quickbooks",
          "Python",
          "PyAutoGUI",
          "Pandas",
          "Bot"
        ]}>
        <p slot="subtitle">Automating Financial Data Entry in QuickBooks with a Python-Powered Bot.</p>

        <div slot="description">
          <p>The automation bot I developed alleviates tedious manual data entry tasks, ensuring the process is both efficient and error-free. The bot, using PyAutoGUI, interacts with the QuickBooks interface, mimicking manual input of data. This allows the bot to perform routine tasks autonomously, freeing up valuable time and resources. Integrating this automation bot not only enhances operational efficiency but also reduces the potential for human error, ensuring greater data accuracy. This automated solution, especially for businesses managing a large volume of transactions, streamlines their workflow, fostering a more productive business environment.</p>
        </div>
      </PortfolioItem>

      <PortfolioItem
        projectYear="2018"
        title="Cracking CAPTCHAs"
        image="/images/captcha.png"
        labels={[
          "CTC Loss",
          "MobileNet",
          "Image Correction"
        ]}>
        <p slot="subtitle">A Deep Learning Approach Using OpenCV and Connectionist Temporal Classification.</p>

        <div slot="description">
          <p>Utilizing deep learning and the OpenCV (cv2) library, I built a model to crack CAPTCHAs, featuring the Connectionist Temporal Classification (CTC) loss function. The preprocessing of CAPTCHA images, crucial for success, was achieved via cv2's adaptiveThreshold method for different threshold values across varying image illuminations, and morphologyEx function for noise removal. Furthermore, the dilate function enhanced character features for better recognition. These processed images were then processed by a convolutional neural network (CNN), trained for character recognition. With the CTC loss function managing alignment and sequence length variations, this approach offered a robust solution for CAPTCHA cracking, demonstrating the real-world utility of deep learning.</p>
        </div>
      </PortfolioItem>

      <!-- <PortfolioItem
        projectYear="2015"
        title="Windsor ENT"
        image="/images/windsorent-portfolio.png"
        projectLink="https://www.windsor-ent.co.uk"
        tags={[
          "HTML",
          "CSS",
          "JavaScript",
        ]}>
        <p slot="subtitle">Website for a group of ear, nose and throat surgeons built using HTML, CSS, and JavaScript.</p>

        <div slot="description">
          <p>It is fully responsive, ensuring that the content is easily accessible on any device. The static site is optimised for speed and search engines, providing a seamless user experience and improving visibility for potential patients. </p>
          <p>The website includes detailed information about the surgeons' qualifications, services offered, and contact information. The site is easy to navigate, making it easy for patients to find the information they need quickly and efficiently.</p>
        </div>
      </PortfolioItem> -->
    </section>
  </div>
</DefaultLayout>

<style lang="scss">
  .projects {
    display: flex;
    flex-direction: column;
    margin-top: 3rem;
    row-gap: 2rem;
  }

  @media screen and (max-width: 980px) {
    .projects {
      margin-top: 1.5rem;
    }
  }
</style>
